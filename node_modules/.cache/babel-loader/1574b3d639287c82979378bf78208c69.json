{"remainingRequest":"C:\\Users\\coding\\Documents\\coding\\vue\\Health_report_front\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\coding\\Documents\\coding\\vue\\Health_report_front\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!C:\\Users\\coding\\Documents\\coding\\vue\\Health_report_front\\node_modules\\vue-loader-v16\\dist\\index.js??ref--1-1!C:\\Users\\coding\\Documents\\coding\\vue\\Health_report_front\\src\\pages\\user_act_chart.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\Users\\coding\\Documents\\coding\\vue\\Health_report_front\\src\\pages\\user_act_chart.vue","mtime":1636533060772},{"path":"C:\\Users\\coding\\Documents\\coding\\vue\\Health_report_front\\babel.config.js","mtime":1636352883075},{"path":"C:\\Users\\coding\\Documents\\coding\\vue\\Health_report_front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\coding\\Documents\\coding\\vue\\Health_report_front\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\coding\\Documents\\coding\\vue\\Health_report_front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\coding\\Documents\\coding\\vue\\Health_report_front\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9jcmVhdGVGb3JPZkl0ZXJhdG9ySGVscGVyIGZyb20gIkM6L1VzZXJzL2NvZGluZy9Eb2N1bWVudHMvY29kaW5nL3Z1ZS9IZWFsdGhfcmVwb3J0X2Zyb250L25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9jcmVhdGVGb3JPZkl0ZXJhdG9ySGVscGVyIjsKaW1wb3J0IHsgZGVmaW5lQ29tcG9uZW50IH0gZnJvbSAndnVlJzsKaW1wb3J0IHsgUGllIH0gZnJvbSAndnVlMy1jaGFydC12Mic7CmltcG9ydCBhY3QyIGZyb20gIi4uL2FjdDIuanNvbiI7CmV4cG9ydCBkZWZhdWx0IGRlZmluZUNvbXBvbmVudCh7CiAgbmFtZTogJ3VzZXJfYWN0X2NoYXJ0JywKICBleHRlbmRzOiBQaWUsCiAgcHJvcHM6IHsKICAgIHVzZXJfaWQ6IFN0cmluZwogIH0sCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGF2ZzogYWN0Mlt0aGlzLnVzZXJfaWRdCiAgICB9OwogIH0sCiAgbW91bnRlZDogZnVuY3Rpb24gbW91bnRlZCgpIHsKICAgIGNvbnNvbGUubG9nKHRoaXMuYXZnKTsKICAgIHZhciBsYWJlbHMxID0gW107CiAgICB2YXIgYXZnX3RpbWUgPSBbXTsKCiAgICB2YXIgX2l0ZXJhdG9yID0gX2NyZWF0ZUZvck9mSXRlcmF0b3JIZWxwZXIodGhpcy5hdmcpLAogICAgICAgIF9zdGVwOwoKICAgIHRyeSB7CiAgICAgIGZvciAoX2l0ZXJhdG9yLnMoKTsgIShfc3RlcCA9IF9pdGVyYXRvci5uKCkpLmRvbmU7KSB7CiAgICAgICAgdmFyIGkgPSBfc3RlcC52YWx1ZTsKICAgICAgICB2YXIgY291bnRfYXZnID0gaVsxXSAtIGlbMF0gKyAxOwogICAgICAgIGxhYmVsczFbbGFiZWxzMS5sZW5ndGhdID0gaVsyXTsKICAgICAgICBhdmdfdGltZVthdmdfdGltZS5sZW5ndGhdID0gY291bnRfYXZnOwogICAgICB9IC8vIE92ZXJ3cml0aW5nIGJhc2UgcmVuZGVyIG1ldGhvZCB3aXRoIGFjdHVhbCBkYXRhLgoKICAgIH0gY2F0Y2ggKGVycikgewogICAgICBfaXRlcmF0b3IuZShlcnIpOwogICAgfSBmaW5hbGx5IHsKICAgICAgX2l0ZXJhdG9yLmYoKTsKICAgIH0KCiAgICB0aGlzLnJlbmRlckNoYXJ0KHsKICAgICAgbGFiZWxzOiBsYWJlbHMxLAogICAgICBkYXRhc2V0czogW3sKICAgICAgICBsYWJlbDogJ3VzZXJfYWN0X3RpbWUnLAogICAgICAgIGRhdGE6IGF2Z190aW1lLAogICAgICAgIGJhY2tncm91bmRDb2xvcjogWydyZ2IoMjU1LCA5OSwgMTMyKScsICdyZ2IoNTQsIDE2MiwgMjM1KScsICdyZ2IoMjU1LCAyMDUsIDg2KScsICdyZ2IoMjU1LCA5OSwgMTMyKScsICdyZ2IoNTQsIDE2MiwgMjM1KScsICdyZ2IoMjU1LCAyMDUsIDg2KScsICdyZ2IoMjU1LCA5OSwgMTMyKScsICdyZ2IoNTQsIDE2MiwgMjM1KScsICdyZ2IoMjU1LCAyMDUsIDg2KScsICdyZ2IoMjU1LCA5OSwgMTMyKScsICdyZ2IoNTQsIDE2MiwgMjM1KScsICdyZ2IoMjU1LCAyMDUsIDg2KScsICdyZ2IoMjU1LCAyMDUsIDg2KScsICdyZ2IoMjU1LCA5OSwgMTMyKScsICdyZ2IoNTQsIDE2MiwgMjM1KScsICdyZ2IoMjU1LCAyMDUsIDg2KScsICdyZ2IoMjU1LCAyMDUsIDg2KScsICdyZ2IoMjU1LCA5OSwgMTMyKScsICdyZ2IoNTQsIDE2MiwgMjM1KScsICdyZ2IoMjU1LCAyMDUsIDg2KScsICdyZ2IoMjU1LCAyMDUsIDg2KScsICdyZ2IoMjU1LCA5OSwgMTMyKScsICdyZ2IoNTQsIDE2MiwgMjM1KScsICdyZ2IoMjU1LCAyMDUsIDg2KScsICdyZ2IoMjU1LCAyMDUsIDg2KScsICdyZ2IoMjU1LCA5OSwgMTMyKScsICdyZ2IoNTQsIDE2MiwgMjM1KScsICdyZ2IoMjU1LCAyMDUsIDg2KScsICdyZ2IoMjU1LCAyMDUsIDg2KScsICdyZ2IoMjU1LCA5OSwgMTMyKScsICdyZ2IoNTQsIDE2MiwgMjM1KScsICdyZ2IoMjU1LCAyMDUsIDg2KSddCiAgICAgIH1dCiAgICB9KTsKICB9LAogIG1ldGhvZHM6IHsKICAgIGNoYW5nZTogZnVuY3Rpb24gY2hhbmdlKCkgewogICAgICBjb25zb2xlLmxvZyh0aGlzLmF2Zyk7CiAgICAgIHZhciBsYWJlbHMxID0gW107CiAgICAgIHZhciBhdmdfdGltZSA9IFtdOwoKICAgICAgdmFyIF9pdGVyYXRvcjIgPSBfY3JlYXRlRm9yT2ZJdGVyYXRvckhlbHBlcih0aGlzLmF2ZyksCiAgICAgICAgICBfc3RlcDI7CgogICAgICB0cnkgewogICAgICAgIGZvciAoX2l0ZXJhdG9yMi5zKCk7ICEoX3N0ZXAyID0gX2l0ZXJhdG9yMi5uKCkpLmRvbmU7KSB7CiAgICAgICAgICB2YXIgaSA9IF9zdGVwMi52YWx1ZTsKICAgICAgICAgIHZhciBjb3VudF9hdmcgPSBpWzFdIC0gaVswXSArIDE7CiAgICAgICAgICBsYWJlbHMxW2xhYmVsczEubGVuZ3RoXSA9IGlbMl07CiAgICAgICAgICBhdmdfdGltZVthdmdfdGltZS5sZW5ndGhdID0gY291bnRfYXZnOwogICAgICAgIH0KICAgICAgfSBjYXRjaCAoZXJyKSB7CiAgICAgICAgX2l0ZXJhdG9yMi5lKGVycik7CiAgICAgIH0gZmluYWxseSB7CiAgICAgICAgX2l0ZXJhdG9yMi5mKCk7CiAgICAgIH0KICAgIH0KICB9Cn0pOw=="},{"version":3,"sources":["C:\\Users\\coding\\Documents\\coding\\vue\\Health_report_front\\src\\pages\\user_act_chart.vue"],"names":[],"mappings":";AACA,SAAS,eAAT,QAAgC,KAAhC;AACA,SAAS,GAAT,QAAoB,eAApB;AAEA,OAAO,IAAP,MAAiB,cAAjB;AAEA,eAAe,eAAe,CAAC;AAC9B,EAAA,IAAI,EAAE,gBADwB;AAE9B,EAAA,OAAO,EAAE,GAFqB;AAG9B,EAAA,KAAI,EAAI;AACD,IAAA,OAAM,EAAI;AADT,GAHsB;AAM9B,EAAA,IAN8B,kBAMxB;AACL,WAAO;AACN,MAAA,GAAE,EAAI,IAAI,CAAC,KAAK,OAAN;AADJ,KAAP;AAGA,GAV6B;AAW9B,EAAA,OAX8B,qBAWnB;AACV,IAAA,OAAO,CAAC,GAAR,CAAY,KAAK,GAAjB;AAEA,QAAI,OAAM,GAAI,EAAd;AACA,QAAI,QAAO,GAAI,EAAf;;AAJU,+CAMG,KAAK,GANR;AAAA;;AAAA;AAMV,0DAAsB;AAAA,YAAd,CAAc;AACZ,YAAI,SAAQ,GAAI,CAAC,CAAC,CAAD,CAAD,GAAK,CAAC,CAAC,CAAD,CAAN,GAAU,CAA1B;AACA,QAAA,OAAO,CAAC,OAAO,CAAC,MAAT,CAAP,GAA0B,CAAC,CAAC,CAAD,CAA3B;AACA,QAAA,QAAQ,CAAC,QAAQ,CAAC,MAAV,CAAR,GAA4B,SAA5B;AACJ,OAVI,CAYV;;AAZU;AAAA;AAAA;AAAA;AAAA;;AAaV,SAAK,WAAL,CAAiB;AAChB,MAAA,MAAK,EAAK,OADM;AAEhB,MAAA,QAAQ,EAAE,CACT;AACC,QAAA,KAAI,EAAI,eADT;AAEC,QAAA,IAAG,EAAI,QAFR;AAGC,QAAA,eAAe,EAAE,CAChB,mBADgB,EAEhB,mBAFgB,EAGhB,mBAHgB,EAIhB,mBAJgB,EAKhB,mBALgB,EAMhB,mBANgB,EAOhB,mBAPgB,EAQhB,mBARgB,EAShB,mBATgB,EAUhB,mBAVgB,EAWhB,mBAXgB,EAYhB,mBAZgB,EAahB,mBAbgB,EAchB,mBAdgB,EAehB,mBAfgB,EAgBhB,mBAhBgB,EAiBhB,mBAjBgB,EAkBhB,mBAlBgB,EAmBhB,mBAnBgB,EAoBhB,mBApBgB,EAqBhB,mBArBgB,EAsBhB,mBAtBgB,EAuBhB,mBAvBgB,EAwBhB,mBAxBgB,EAyBhB,mBAzBgB,EA0BhB,mBA1BgB,EA2BhB,mBA3BgB,EA4BhB,mBA5BgB,EA6BhB,mBA7BgB,EA8BhB,mBA9BgB,EA+BhB,mBA/BgB,EAgChB,mBAhCgB;AAHlB,OADS;AAFM,KAAjB;AA4CA,GApE6B;AAqE9B,EAAA,OAAM,EAAI;AACH,IAAA,MADG,oBACM;AACL,MAAA,OAAO,CAAC,GAAR,CAAY,KAAK,GAAjB;AAET,UAAI,OAAM,GAAI,EAAd;AACA,UAAI,QAAO,GAAI,EAAf;;AAJc,kDAMD,KAAK,GANJ;AAAA;;AAAA;AAMd,+DAAsB;AAAA,cAAd,CAAc;AACrB,cAAI,SAAQ,GAAI,CAAC,CAAC,CAAD,CAAD,GAAK,CAAC,CAAC,CAAD,CAAN,GAAU,CAA1B;AACA,UAAA,OAAO,CAAC,OAAO,CAAC,MAAT,CAAP,GAA0B,CAAC,CAAC,CAAD,CAA3B;AACA,UAAA,QAAQ,CAAC,QAAQ,CAAC,MAAV,CAAR,GAA4B,SAA5B;AACD;AAVc;AAAA;AAAA;AAAA;AAAA;AAWT;AAZG;AArEoB,CAAD,CAA9B","sourcesContent":["<script>\r\nimport { defineComponent } from 'vue'\r\nimport { Pie } from 'vue3-chart-v2'\r\n\r\nimport act2 from \"../act2.json\"; \r\n\r\nexport default defineComponent({\r\n\tname: 'user_act_chart',\r\n\textends: Pie,\r\n\tprops : {\r\n        user_id : String,\r\n    },\r\n\tdata(){\r\n\t\treturn {\r\n\t\t\tavg : act2[this.user_id],\r\n\t\t}\r\n\t},\r\n\tmounted () {\r\n\t\tconsole.log(this.avg)\r\n\r\n\t\tvar labels1 = [];\r\n\t\tvar avg_time = [];\r\n\r\n\t\tfor(var i of this.avg){\r\n            var count_avg = i[1]-i[0]+1;\r\n            labels1[labels1.length] = i[2];\r\n            avg_time[avg_time.length] = count_avg;\r\n        }\r\n\t\t\r\n\t\t// Overwriting base render method with actual data.\r\n\t\tthis.renderChart({\r\n\t\t\tlabels :  labels1,\r\n\t\t\tdatasets: [\r\n\t\t\t\t{\r\n\t\t\t\t\tlabel : 'user_act_time',\r\n\t\t\t\t\tdata : avg_time,\r\n\t\t\t\t\tbackgroundColor: [\r\n\t\t\t\t\t\t'rgb(255, 99, 132)',\r\n\t\t\t\t\t\t'rgb(54, 162, 235)',\r\n\t\t\t\t\t\t'rgb(255, 205, 86)',\r\n\t\t\t\t\t\t'rgb(255, 99, 132)',\r\n\t\t\t\t\t\t'rgb(54, 162, 235)',\r\n\t\t\t\t\t\t'rgb(255, 205, 86)',\r\n\t\t\t\t\t\t'rgb(255, 99, 132)',\r\n\t\t\t\t\t\t'rgb(54, 162, 235)',\r\n\t\t\t\t\t\t'rgb(255, 205, 86)',\r\n\t\t\t\t\t\t'rgb(255, 99, 132)',\r\n\t\t\t\t\t\t'rgb(54, 162, 235)',\r\n\t\t\t\t\t\t'rgb(255, 205, 86)',\r\n\t\t\t\t\t\t'rgb(255, 205, 86)',\r\n\t\t\t\t\t\t'rgb(255, 99, 132)',\r\n\t\t\t\t\t\t'rgb(54, 162, 235)',\r\n\t\t\t\t\t\t'rgb(255, 205, 86)',\r\n\t\t\t\t\t\t'rgb(255, 205, 86)',\r\n\t\t\t\t\t\t'rgb(255, 99, 132)',\r\n\t\t\t\t\t\t'rgb(54, 162, 235)',\r\n\t\t\t\t\t\t'rgb(255, 205, 86)',\r\n\t\t\t\t\t\t'rgb(255, 205, 86)',\r\n\t\t\t\t\t\t'rgb(255, 99, 132)',\r\n\t\t\t\t\t\t'rgb(54, 162, 235)',\r\n\t\t\t\t\t\t'rgb(255, 205, 86)',\r\n\t\t\t\t\t\t'rgb(255, 205, 86)',\r\n\t\t\t\t\t\t'rgb(255, 99, 132)',\r\n\t\t\t\t\t\t'rgb(54, 162, 235)',\r\n\t\t\t\t\t\t'rgb(255, 205, 86)',\r\n\t\t\t\t\t\t'rgb(255, 205, 86)',\r\n\t\t\t\t\t\t'rgb(255, 99, 132)',\r\n\t\t\t\t\t\t'rgb(54, 162, 235)',\r\n\t\t\t\t\t\t'rgb(255, 205, 86)',\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t],\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t})\r\n\t},\r\n\tmethods : {\r\n        change() {\r\n            console.log(this.avg)\r\n\r\n\t\t\tvar labels1 = [];\r\n\t\t\tvar avg_time = [];\r\n\r\n\t\t\tfor(var i of this.avg){\r\n\t\t\t\tvar count_avg = i[1]-i[0]+1;\r\n\t\t\t\tlabels1[labels1.length] = i[2];\r\n\t\t\t\tavg_time[avg_time.length] = count_avg;\r\n\t\t\t}\r\n        }\r\n    },\r\n})\r\n</script>"],"sourceRoot":""}]}